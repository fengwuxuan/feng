#################基础补全（未见的遗忘的不常用的）+ 优化提升#####################
1. whatis commnd: 简要说明命令的信息，一般是其作用。
2. info commnd：更加详细的说明文档，但是从格式上来看不如man简洁明了。
3. which commnd vs whereis commnd：which是查找程序可执行文件（bin）的路径，后者是查看程序的搜索路径，一般包括可执行文件路径、man文件路径
4. updatedb：更新locate命令的索引库，一般搜索不到时可以试试更新
5. head vs tail：分别查看文件的开头和末尾，head -5 file：查看开头几行
6. cat -n：查看时显示行号
7. xargs： 能够将输入数据转化为特定命令的命令行参数，-n指定输出的行数，-d指定界定符
8. uniq： 消除文本中的重复行，常和sort命令一起使用
9. tr： 转换字符，可以进行替换、删除等操作
10. cut vs paste： 切割与合并文本
11. grep： 文本搜索
12. sed： 文本替换利器
13. awk： 数据流处理工具
14. od： od命令用于输出文件的八进制、十六进制或其它格式编码的字节，通常用于显示或查看文件中不能直接显示在终端的字符，eg：od -c file以ascii码显示文本。
15. ps -ef and ps -ajx: 前者查看正在运行的进程，后者列出完成的进程，pstree不要忘了哦，太久没用了
16. pgrep 字段：适合查询只记得部分字段的进程
17. lsof: 列出当前系统打开文件的工具（一切皆文件）。在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件。
          -a file: 列出打开文件的进程，这里的file可以是普通文件、目录、网络文件系统文件、字符或设备文件、共享库、管道、网络文件
          -c<进程名>: 列出指定进程所打开的文件
          -d<文件号>: 列出占用该文件号的进程
          +d<目录>:  列出目录下被打开的文件
          +D<目录>:  递归列出目录下被打开的文件
          -n<目录>:  列出使用NFS的文件
          -i<条件>:  列出符合条件的进程（4（ipv4）、6（ipv6）、协议（tcp、ip等）、:端口、 @ip ） eg：lsof -i:3306，查看端口3306的占用情况， 
                     lsof -i列出所有的网络连接， lsof -i tcp：列出tcp连接， lsof -4 -a -p 1234：列出所有进程1234打开的ipv4 网络文件
          -p<进程号> 列出指定进程号所打开的文件
          -u  列出UID号进程详情
18. pmap pid：用于输出进程内存的状况，可以用来分析线程堆栈，甚至可以输出调用了哪些共享库。
19. free：查看系统内存使用情况
20. sar：是System Activity Reporter（系统活动情况报告）的缩写。sar工具将对系统当前的状态进行取样，然后通过计算数据和比例来表达系统的当前运行状态。它
         的特点是可以连续对系统取样，获得大量的取样数据；取样数据和分析的结果都可以存入文件，所需的负载很小。sar是目前Linux上最为全面的系统性能分析工具
         之一，可以从14个大方面对系统的活动进行报告，包括文件的读写情况、系统调用的使用情况、串口、CPU效率、内存使用状况、进程活动及IPC有关的活动等，使
         用也是较为复杂。
         它有两种用法：追溯过去的统计数据（默认）  vs  周期性的查看当前数据，前者默认情况下，sar从最近的0点0分开始显示数据；如果想继续查看一天前的报告；
         可以查看保存在/var/log/sysstat/下的sa日志； 使用sar工具查看:
         
         注意如下命令均可指定 m n， m表示显示间隔， n 表示显示次数
         
         sar -u：查看CPU的利用率。
          %user 用户模式下消耗的CPU时间的比例；
          %nice 通过nice改变了进程调度优先级的进程，在用户模式下消耗的CPU时间的比例
          %system 系统模式下消耗的CPU时间的比例；
          %iowait CPU等待磁盘I/O导致空闲状态消耗的时间比例；
          %steal 利用Xen等操作系统虚拟化技术，等待其它虚拟CPU计算占用的时间比例；
          %idle CPU空闲时间比例；
         
         sar -q: 查看平均负载,指定-q后，就能查看运行队列中的进程数、系统上的进程大小、平均负载等；与其它命令相比，它能查看各项指标随时间变化的情况；
          eg:sar -q 1 10:每一秒显示一次，总计显示10秒
          runq-sz：运行队列的长度（等待运行的进程数）
          plist-sz：进程列表中进程（processes）和线程（threads）的数量
          ldavg-1：最后1分钟的系统平均负载 
          ldavg-5：过去5分钟的系统平均负载
          ldavg-15：过去15分钟的系统平均负载
          blocked：阻塞的进程数（线程）
         
         sar -r： 指定-r之后，可查看物理内存使用状况；
          kbmemfree：这个值和free命令中的free值基本一致,所以它不包括buffer和cache的空间.
          kbmemused：这个值和free命令中的used值基本一致,所以它包括buffer和cache的空间.
          %memused：物理内存使用率，这个值是kbmemused和内存总量(不包括swap)的一个百分比.
          kbbuffers和kbcached：这两个值就是free命令中的buffer和cache.
          kbcommit：保证当前系统所需要的内存,即为了确保不溢出而需要的内存(RAM+swap).
          %commit：这个值是kbcommit与内存总量(包括swap)的一个百分比.
         
         sar -W：查看页面交换发生状况，页面发生交换时，服务器的吞吐量会大幅下降；服务器状况不良时，如果怀疑因为内存不足而导致了页面交换的发生，可以使用
          这个命令来确认是否发生了大量的交换；
          pswpin/s：每秒系统换入的交换页面（swap page）数量
          pswpout/s：每秒系统换出的交换页面（swap page）数量
          
         要判断系统瓶颈问题，有时需几个 sar 命令选项结合起来
          怀疑CPU存在瓶颈，可用 sar -u 和 sar -q 等来查看
          怀疑内存存在瓶颈，可用sar -B、sar -r 和 sar -W 等来查看
          怀疑I/O存在瓶颈，可用 sar -b、sar -u 和 sar -d 等来查看
         -A 汇总所有的报告
         -B 报告页活动
         -b 报告缓存的使用情况
         -d 报告磁盘的使用情况
         -H 报告关于HugePages使用的统计数据
         -m 报告IPC消息队列和信号量的使用情况
         -n 报告newwork的使用情况，关键词有：用法 sar -n keywords
             DEV     Network interfaces
             EDEV    Network interfaces (errors)
             NFS     NFS client
             NFSD    NFS server
             SOCK    Sockets (v4)
             IP      IP traffic      (v4)
             EIP     IP traffic      (v4) (errors)
             ICMP    ICMP traffic    (v4)
             EICMP   ICMP traffic    (v4) (errors)
             TCP     TCP traffic     (v4)
             ETCP    TCP traffic     (v4) (errors)
             UDP     UDP traffic     (v4)
             SOCK6   Sockets (v6)
             IP6     IP traffic      (v6)
             EIP6    IP traffic      (v6) (errors)
             ICMP6   ICMP traffic    (v6)
             EICMP6  ICMP traffic    (v6) (errors)
             UDP6    UDP traffic     (v6)
         -q 报告运行队列和交换队列的平均长度
         -R 内存统计
         -S 交换空间使用情况
         -r 内存利用率
         -u 报告CPU的利用率
         -v 报告进程、i节点、文件和锁表状态
         -w 报告系统交换活动状况
         -y 报告TTY设备活动状况  
21. vmstat：sar替代工具，但性能稍弱，是（虚拟内存统计）的缩写，可对操作系统的虚拟内存、进程、CPU活动进行监控。他是对系统的整体情况进行统计，不足之处
是无法对某个进程进行深入分析。虚拟内存就是为了满足物理内存的不足而提出的策略，它是利用磁盘空间虚拟出的一块逻辑内存，用作虚拟内存的磁盘空间被称为交换空
间（Swap Space）。作为物理内存的扩展，linux会在物理内存不足时，使用交换分区的虚拟内存，更详细的说，就是内核会将暂时不用的内存块信息写到交换空间，这样
以来，物理内存得到了释放，这块内存就可以用于其它目的，当需要用到原始的内容时，这些信息会被重新从交换空间读入物理内存。
         Linux系统会不时的进行页面交换操作，以保持尽可能多的空闲物理内存，即使并没有什么事情需要内存，Linux也会交换出暂时不用的内存页面。这可以避免
等待交换所需的时间。其次，linux进行页面交换是有条件的，不是所有页面在不用时都交换到虚拟内存，linux内核根据”最近最经常使用“算法，仅仅将一些不经常使用
的页面文件交换到虚拟内存，有时我们会看到这么一个现象：linux物理内存还有很多，但是交换空间也使用了很多。最后，交换空间的页面在使用时会首先被交换到物理
内存，如果此时没有足够的物理内存来容纳这些页面，它们又会被马上交换出去，如此以来，虚拟内存中可能没有足够空间来存储这些交换页面，最终会导致linux出现假
死机、服务异常等问题，linux虽然可以在一段时间内自行恢复，但是恢复后的系统已经基本不可用了。因此这可能是服务器死机的重要原因之一。
         在Linux内存管理中，主要是通过“调页Paging”和“交换Swapping”来完成上述的内存调度。调页算法是将内存中最近不常使用的页面换到磁盘上，把活动页面
保留在内存中供进程使用。交换技术是将整个进程，而不是部分页面，全部交换到磁盘上。分页(Page)写入磁盘的过程被称作Page-Out，分页(Page)从磁盘重新回到内存
的过程被称作Page-In。当内核需要一个分页时，但发现此分页不在物理内存中(因为已经被Page-Out了)，此时就发生了分页错误（Page Fault）。当系统内核发现可运
行内存变少时，就会通过Page-Out来释放一部分物理内存。经管Page-Out不是经常发生，但是如果Page-out频繁不断的发生，直到当内核管理分页的时间超过运行程式的
时间时，系统效能会急剧下降。这时的系统已经运行非常慢或进入暂停状态，这种状态亦被称作thrashing(颠簸)。
         参数：
          -a：显示活跃和非活跃内存
          -f：显示从系统启动至今的fork数量 。
          -m：显示slabinfo
          -n：只在开始时显示一次各字段名称。
          -s：显示内存相关统计信息及多种系统活动数量。
          delay：刷新时间间隔。如果不指定，只显示一条结果。
          count：刷新次数。如果不指定刷新次数，但指定了刷新时间间隔，这时刷新次数为无穷。
          -d：显示磁盘相关统计信息
          -p：显示指定磁盘分区统计信息
          -S：使用指定单位显示。参数有 k 、K 、m 、M ，分别代表1000、1024、1000000、1048576字节（byte）。默认单位为K（1024 bytes）
          -V：显示vmstat版本信息
         用法：
          vmstat：查看虚拟内存使用情况，r表示运行队列中进程数量，b表示等待IO的进程数量，swpd: 使用虚拟内存大小free: 可用内存大小，buff: 用作缓冲的内存大小，
                  cache: 用作缓存的内存大小，si: 每秒从交换区写到内存的大小，so: 每秒写入交换区的内存大小，bi: 每秒读取的块数，bo: 每秒写入的块数，
                  in: 每秒中断数，包括时钟中断。cs: 每秒上下文切换数。us: 用户进程执行时间(user time)sy: 系统进程执行时间(system time) 
                  id: 空闲时间(包括IO等待时间),中央处理器的空闲时间 。以百分比表示。wa: 等待IO时间
                  如果 r经常大于 4 ，且id经常少于40，表示cpu的负荷很重。如果bi，bo 长期不等于0，表示内存不足。如果disk 经常不等于0， 且在 b中的队列
                  大于3， 表示 io性能不好。
          vmstat -f:查看徐彤已经fork了多少次
          vmstat -a：查看活跃与不活跃内存
          vmstat -s：查看内存的详细使用情况
          vmstat -：查看磁盘的读写情况
22. netstat：用于显示各种网络相关信息，如网络连接，路由表，接口状态 (Interface Statistics)，masquerade 连接，多播成员 (Multicast Memberships) 等等。
23. host domain：查询域名的IP， host IP：反向查询IP的域名
24. usermod -G groupNmame username：将用户加入到组
     添加sudo权限：sudo usermod -G admin username 或 sudo usermod -a -G admin username，后者表示用户已经是其他组的成员了
                  图形界面来操作这些，使用 “系统 -> 管理 -> 用户和组”。 选择你想添加到sudo组的用户，点击“属性”，在用户权限的区域，选择“执行系统管理任务”的选择框即可。
                  编辑/etc/sudoers文件。
25. chown username dirOrFile：更改目录或文件的拥有者
26. 查询系统版本： uname -a  vs  lsb_release -a vs more /etc/release
27. 查询CPU核个数：cat /proc/cpuinfo | grep processor | wc -l  查询CPU信息cat /proc/cpuinfo
28. 查看内存信息： cat /proc/meminfo 
29. IPC资源查询：ipcs -m：查看系统使用的IPC共享内存资源
          ipcs -q：查看系统使用的IPC队列
          ipcs -s：查看系统使用的IPC信号量
30. ulimit – a：显示系统所有limit的资源
31. core文件：在一个程序崩溃时，它一般会在指定目录下生成一个core文件。core文件仅仅是一个内存映象(同时加上调试信息)，主要是用来调试的。
          ulimit -c 0：用于阻止core文件的生成
          在core文件夹下gdb -c core它会启动GNU的调试器，来调试core文件，并且会显示生成此core文件的程序名，中止此程序的信号等等，获得程序名后可以用gdb -c core name
          /proc/sys/kernel/core_uses_pid可以控制产生的core文件的文件名中是否添加pid作为扩展，如果添加则文件内容为1，否则为0
